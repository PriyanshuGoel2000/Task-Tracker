{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/Addtask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","Addtask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3e161c8.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    return (<button onClick={onClick} style={{backgroundColor: color}} className='btn'>{text}</button>\r\n        \r\n    )\r\n}\r\nButton.defaultProps={\r\n    color:'steelblue',\r\n}\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n}\r\nexport default Button\r\n","\r\nimport PropTypes from 'prop-types'\r\nimport {useLocation} from 'react-router-dom'\r\nimport Button from './Button'\r\nconst Header = ({title, onAdd,showAdd}) => {\r\n    const location=useLocation()\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            {location.pathname ==='/' &&\r\n            (<Button color={showAdd?'red':'green'} text={showAdd?'Close':'Add'} onClick={onAdd} />\r\n            )}\r\n        </header>\r\n    )\r\n}\r\nHeader.defaultProps={\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\nexport default Header\r\n","import {FaTimes} from 'react-icons/fa'\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder?\r\n        'reminder':''}`} \r\n        onDoubleClick={()=>onToggle(task.id)}>\r\n            <h3>\r\n                {task.text} \r\n                <FaTimes style={{color:'red',cursor:'pointer'}}\r\n                onClick={()=>onDelete(task.id)}/>\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from'./Task'\r\nconst Tasks = ({tasks,onDelete, onToggle}) => {\r\n    return (\r\n        <>\r\n        {\r\n            tasks.map((task)=>(\r\n            <Task key={task.id} \r\n            task={task} \r\n            onDelete={onDelete}\r\n            onToggle={onToggle}/>))\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import {useState} from 'react'\r\n\r\nconst Addtask = ({ onAdd }) => {\r\n    const [text,setText]=useState('')\r\n    const [day,setDay]=useState('')\r\n    const [reminder,setReminder]=useState(false)\r\n\r\n    const onSubmit=(e)=>{\r\n        e.preventDefault()\r\n\r\n        if(!text)\r\n        {\r\n            alert('Please Add a Task')\r\n            return\r\n        }\r\n\r\n        onAdd({text, day, reminder})\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <div className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' \r\n                placeholder='Add Task'\r\n                value={text} \r\n                onChange={(e)=> setText(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type='text' \r\n                placeholder='Add Day & Time'\r\n                value={day} \r\n                onChange={(e)=> setDay(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox' \r\n                checked={reminder}\r\n                value={reminder} \r\n                onChange={(e)=> setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n            <input type='submit' \r\n            value='Save Task' \r\n            className='btn btn-block' \r\n            onClick={onSubmit} />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Addtask\r\n","import {Link} from 'react-router-dom'\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021 </p>\r\n            <Link to=\"/about\">About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import {Link} from 'react-router-dom'\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0 </h4>\r\n            <Link to=\"/\">Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import {useState,useEffect} from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/Addtask'\nimport Footer from './components/Footer'\nimport About from './components/About'\nconst  App=()=> {\n  const [showAddTask, setShowAddTask]= useState(false)\n  const [tasks,setTasks]=useState([])\n\n  useEffect(()=>{\n    const getTasks = async () => {\n      const  tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  },[])\n\n  //fetch Tasks \n  const fetchTasks=async() =>{\n    const res = await fetch('http://localhost:5000/tasks')\n    const data =await res.json()\n    return data \n  }\n\n   //fetch Task\n   const fetchTask=async(id) =>{\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data =await res.json()\n    return data \n  } \n//Add Task\nconst addTask= async (task) => {\n  const res= await fetch('http://localhost:5000/tasks',{\n    method:'POST',\n    headers:{\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  })\n\n  const data = await res.json()\n  setTasks([...tasks,data])\n  //const id=Math.floor(Math.random()*10000)+1\n  //const newTask={ id, ...task}\n  //setTasks([...tasks,newTask])\n}\n\n//Delete Task\nconst deleteTask =async (id)=>{\n  await fetch(`http://localhost:5000/tasks/${id}`,{\n    method:'DELETE'\n  })\n  setTasks(tasks.filter((task)=> task.id!==id))\n}\n\n//Toggle Reminder\nconst toggleReminder=async(id)=>{\n  const taskToToggle= await fetchTask(id)\n  const updTask={...taskToToggle, \n    reminder: !taskToToggle.reminder}\n  const res = await fetch(`http://localhost:5000/tasks/${id}`,{\n    method:'PUT',\n    headers:{\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(updTask)\n  })\n  const data = await res.json()\n  setTasks(tasks.map((task)=>task.id===id\n  ?{...task,reminder:!task.reminder}:task\n  ))\n}\n  return (\n    <Router>\n    <div className=\"container\">\n      <Header onAdd={()=> setShowAddTask(!showAddTask)} \n      showAdd={showAddTask}/>\n      \n      <Route path='/' exact render={(props)=>(\n        <>\n          {showAddTask && <AddTask onAdd={addTask}/>}\n          {tasks.length>0?\n          <Tasks tasks={tasks} \n          onDelete={deleteTask}\n          onToggle={toggleReminder} />\n          : 'No Tasks To Show' \n          }\n        </>\n      )}/>\n      <Route path=\"/about\" component={About}/>\n      <Footer  />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}